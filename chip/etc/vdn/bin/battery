#!/bin/bash
source /etc/vdn/include/vdn.lib

show_help()
{
echo -e "\n${C}Usage: ${G}${0##*/}${N} (options)\n"
echo -e "---------------------------------"
echo -e "Option:"
echo -e "  check           # Checks presence of a battery connected."
echo -e "  level           # Battery Fuel Gauge in %."
echo -e "  tempc           # Internal Charger Temperature in C."
echo -e "  tempf           # Internal Charger Temperature in F."
echo -e "  volts           # Battery Voltage in DC"
echo -e "  current         # Battery Current (+ Charging / - Discharging)"
echo -e "  mains           # Indicates presence of main power"
echo -e "  usbvolts        # USB Voltage"
echo -e "  usbma           # USB Current "
}

readAPX209() {
# Enable all ADC channels
/usr/sbin/i2cset -y -f 0 0x34 0x82 0xFF

#read Power status register Register 00
    POWER_STATUS=$(i2cget -y -f 0 0x34 0x00)
    CHG_STATUS=$(($POWER_STATUS >> 3 ))
    USB_PWR=$(($POWER_STATUS >> 5 ))
    AC_PWR=$(($POWER_STATUS >> 8 ))

#read Power OPERATING MODE register  01
    POWER_OP_MODE=$(i2cget -y -f 0 0x34 0x01)

#read Battery Status
    BAT_EXIST=$(($(($POWER_OP_MODE&0x20))/32))

# read AC in voltage.
    AC_VOLT_MSB=$(/usr/sbin/i2cget -y -f 0 0x34 0x56)
    AC_VOLT_LSB=$(/usr/sbin/i2cget -y -f 0 0x34 0x57)
    AC_BIN=$(( $(($AC_VOLT_MSB << 4)) | $(($(($AC_VOLT_LSB & 0x0F)) )) ))
    AC_VOLT_FLOAT=$(echo "($AC_BIN*1.7)"|bc)
    AC_VOLT=${AC_VOLT_FLOAT%.*}

# read AC mA current.
    AC_CHG_MSB=$(/usr/sbin/i2cget -y -f 0 0x34 0x58)
    AC_CHG_LSB=$(/usr/sbin/i2cget -y -f 0 0x34 0x59)
    AC_BIN=$(( $(($AC_CHG_MSB << 4)) | $(($(($AC_CHG_LSB & 0x0F)) )) ))
    AC_CHG_FLOAT=$(echo "($AC_BIN*0.625)"|bc)
    AC_CHG=${AC_CHG_FLOAT%.*}

# read USBin voltage.
    USB_VOLT_MSB=$(/usr/sbin/i2cget -y -f 0 0x34 0x5A)
    USB_VOLT_LSB=$(/usr/sbin/i2cget -y -f 0 0x34 0x5B)
    USB_BIN=$(( $(($USB_VOLT_MSB << 4)) | $(($(($USB_VOLT_LSB & 0x0F)) )) ))
    USB_VOLT_FLOAT=$(echo "($USB_BIN*1.7)"|bc)
    USB_VOLT=${USB_VOLT_FLOAT%.*}

# read USB mA current.
    USB_CHG_MSB=$(/usr/sbin/i2cget -y -f 0 0x34 0x5C)
    USB_CHG_LSB=$(/usr/sbin/i2cget -y -f 0 0x34 0x5D)
    USB_BIN=$(( $(($USB_CHG_MSB << 4)) | $(($(($USB_CHG_LSB & 0x0F)) )) ))
    USB_CHG_FLOAT=$(echo "($USB_BIN*0.375)"|bc)
    USB_CHG=${USB_CHG_FLOAT%.*}

# read battery voltage.
    BAT_VOLT_MSB=$(/usr/sbin/i2cget -y -f 0 0x34 0x78)
    BAT_VOLT_LSB=$(/usr/sbin/i2cget -y -f 0 0x34 0x79)
    BAT_BIN=$(( $(($BAT_VOLT_MSB << 4)) | $(($(($BAT_VOLT_LSB & 0x0F)) )) ))
    BAT_VOLT_FLOAT=$(echo "($BAT_BIN*1.1)"|bc)
    BAT_VOLT=${BAT_VOLT_FLOAT%.*}

# read charging status.
    BAT_ICHG_MSB=$(/usr/sbin/i2cget -y -f 0 0x34 0x7A)
    BAT_ICHG_LSB=$(/usr/sbin/i2cget -y -f 0 0x34 0x7B)
    BAT_ICHG_BIN=$(( $(($BAT_ICHG_MSB << 4)) | $(($(($BAT_ICHG_LSB & 0x0F)) )) ))
    BAT_ICHG_FLOAT=$(echo "($BAT_ICHG_BIN*0.5)"|bc)
    BAT_ICHG=${BAT_ICHG_FLOAT%.*}
    BAT_IDISCHG_MSB=$(i2cget -y -f 0 0x34 0x7C)
    BAT_IDISCHG_LSB=$(i2cget -y -f 0 0x34 0x7D)
    BAT_IDISCHG_BIN=$(( $(($BAT_IDISCHG_MSB << 5)) | $(($(($BAT_IDISCHG_LSB & 0x1F)) )) ))
    BAT_IDISCHG=$(echo "($BAT_IDISCHG_BIN*0.5)"|bc)

#read fuel gauge B9h
    BAT_GAUGE_HEX=$(i2cget -y -f 0 0x34 0xb9)
    BAT_GAUGE_DEC=$(($BAT_GAUGE_HEX))

#read internal temperature
    TEMP_MSB=$(i2cget -y -f 0 0x34 0x5e)
    TEMP_LSB=$(i2cget -y -f 0 0x34 0x5f)
    TEMP_BIN=$(( $(($TEMP_MSB << 4)) | $(($(($TEMP_LSB & 0x0F)) )) ))
    TEMP_C=$(echo "($TEMP_BIN*0.1-144.7)"|bc)
    TEMP_F=$(echo "scale=2;((9/5) * $TEMP_C) + 32" |bc)
}


# ------------------[ MAIN ]-------------------------------------------------------------

readAPX209
if [ $USB_PWR = 0 ]; then MAINS=0; else MAINS=1; fi

if [ $# -eq 0 ]; then 
  printf "\n${C}Usage: ${G}${0##*/}${N} -h, --help for full list of options.\n"

# Display all Values

  if [ $USB_PWR = 1 ]; then echo "MAINS:ON" 
   echo -e "USB-IN:$USB_VOLT_FLOAT"
   echo -e "USB-mA:$USB_CHG_FLOAT"
   echo
  fi

  if [ $AC_PWR = 1 ]; then echo "MAINS:ON" 
   echo -e "AC-IN:$AC_VOLT_FLOAT"
   echo -e "AC-mA:$AC_CHG_FLOAT"
   echo
  fi

 if [ $BAT_EXIST = 1 ]; then
   echo -e "Bat Exists:$BAT_EXIST"
   echo -e "Voltage:$BAT_VOLT_FLOAT"
   echo -e "Level:$BAT_GAUGE_DEC"

     if [ "$BAT_ICHG_FLOAT" == "0" ]; then
       echo -e "Charge:-$BAT_IDISCHG"
     else
       echo -e "Charge:+$BAT_ICHG_FLOAT"
     fi
   echo
   echo -e "Tempc:$TEMP_C"
   echo -e "Tempf:$TEMP_F"
 fi
fi


while [ $# -gt 0 ]
do
    case $1 in
           check ) echo -e "$BAT_EXIST"; exit 0;;

           mains ) echo -e "$MAINS"; exit 0;;

           level ) echo -e "$BAT_GAUGE_DEC"; exit 0;;

           tempc ) echo -e "$TEMP_C"; exit 0;;

           tempf ) echo -e "$TEMP_F"; exit 0;;

           volts ) echo -e "$BAT_VOLT_FLOAT"; exit 0;;

         current )

                  if [ "$BAT_ICHG_FLOAT" == "0" ]; then
                    echo -e "-$BAT_IDISCHG"
                  else
                    echo -e "+$BAT_ICHG_FLOAT"
                  fi ;exit 0;;

        usbvolts ) echo -e "$USB_VOLT_FLOAT"; exit 0;;

           usbma ) echo -e "$USB_CHG_FLOAT"; exit 0;;

     -h | --help ) show_help >&2

    exit 1;;
   esac
 shift
done

