
$pi = atan2(1,1) * 4;

sub distance {
  my ($lat1, $lon1, $lat2, $lon2, $unit) = @_;
  my $theta = $lon1 - $lon2;
  my $dist = sin(deg2rad($lat1)) * sin(deg2rad($lat2)) + cos(deg2rad($lat1)) * cos(deg2rad($lat2)) * cos(deg2rad($theta));
  $dist  = acos($dist);
  $dist = rad2deg($dist);
  $dist = $dist * 60 * 1.1515;

  if ($unit eq "K") {
  	$dist = $dist * 1.609344;
  } elsif ($unit eq "N") {
  	$dist = $dist * 0.8684;
		}
	return ($dist);
}

sub acos {
	my ($rad) = @_;
	my $ret = atan2(sqrt(1 - $rad**2), $rad);
	return $ret;
}

sub deg2rad {
	my ($deg) = @_;
	return ($deg * $pi / 180);
}

sub rad2deg {
	my ($rad) = @_;
	return ($rad * 180 / $pi);
}
### Hardcoded Big Mountain to N4LDR QTH
print distance(38.596257, -78.433178, 38.600813, -78.632669, "M") . " Miles\n";
print distance(38.596257, -78.433178, 38.600813, -78.632669, "K") . " Kilometers\n";
print distance(38.596257, -78.433178, 38.600813, -78.632669, "N") . " Nautical Miles\n";

